{"version":3,"sources":["ReConnect.js"],"names":["cc","Class","extends","Component","properties","_lblTip","_lastPing","onLoad","self","fnTestServerOn","vv","net","test","ret","gameNetMgr","reset","roomId","userMgr","oldRoomId","enterRoom","errcode","director","loadScene","setTimeout","fn","data","node","off","wc","show","console","log","on","hide","update","dt"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,iBAAS,IAXD;AAYRC,mBAAW;AAZH,KAHP;;AAkBL;AACAC,YAAQ,kBAAY;AAChB,YAAIC,OAAO,IAAX;;AAEA,YAAIC,iBAAiB,SAAjBA,cAAiB,GAAY;AAC7BT,eAAGU,EAAH,CAAMC,GAAN,CAAUC,IAAV,CAAe,UAAUC,GAAV,EAAe;AAC1B,oBAAIA,GAAJ,EAAS;AACLb,uBAAGU,EAAH,CAAMI,UAAN,CAAiBC,KAAjB;AACA;AACA,wBAAIC,SAAShB,GAAGU,EAAH,CAAMO,OAAN,CAAcC,SAA3B;AACA,wBAAIF,UAAU,IAAd,EAAoB;AAChBhB,2BAAGU,EAAH,CAAMO,OAAN,CAAcC,SAAd,GAA0B,IAA1B;AACAlB,2BAAGU,EAAH,CAAMO,OAAN,CAAcE,SAAd,CAAwBH,MAAxB,EAAgC,UAAUH,GAAV,EAAe;AAC3C,gCAAIA,IAAIO,OAAJ,IAAe,CAAnB,EAAsB;AAClBpB,mCAAGU,EAAH,CAAMI,UAAN,CAAiBE,MAAjB,GAA0B,IAA1B;AACAhB,mCAAGqB,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACH;AACJ,yBALD;AAMH;AACJ,iBAbD,MAcK;AACDC,+BAAWd,cAAX,EAA2B,IAA3B;AACH;AACJ,aAlBD;AAmBH,SApBD;;AAsBA,YAAIe,KAAK,SAALA,EAAK,CAAUC,IAAV,EAAgB;AACrBjB,iBAAKkB,IAAL,CAAUC,GAAV,CAAc,YAAd,EAA4BH,EAA5B;AACAxB,eAAGU,EAAH,CAAMkB,EAAN,CAASC,IAAT,CAAc,SAAd;AACApB;AACH,SAJD;AAKAqB,gBAAQC,GAAR,CAAY,eAAZ;;AAEA,aAAKL,IAAL,CAAUM,EAAV,CAAa,gBAAb,EAA+B,YAAY;AACvChC,eAAGU,EAAH,CAAMkB,EAAN,CAASK,IAAT;AACAzB,iBAAKkB,IAAL,CAAUM,EAAV,CAAa,YAAb,EAA2BR,EAA3B;AACH,SAHD;AAIA,aAAKE,IAAL,CAAUM,EAAV,CAAa,YAAb,EAA2BR,EAA3B;AACH,KAxDI;AAyDL;AACAU,YAAQ,gBAAUC,EAAV,EAAc,CACrB;AA3DI,CAAT","file":"ReConnect.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\components","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        _lblTip: null,\r\n        _lastPing: 0,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        var self = this;\r\n\r\n        var fnTestServerOn = function () {\r\n            cc.vv.net.test(function (ret) {\r\n                if (ret) {\r\n                    cc.vv.gameNetMgr.reset();\r\n                    //cc.director.loadScene('hall');\r\n                    var roomId = cc.vv.userMgr.oldRoomId;\r\n                    if (roomId != null) {\r\n                        cc.vv.userMgr.oldRoomId = null;\r\n                        cc.vv.userMgr.enterRoom(roomId, function (ret) {\r\n                            if (ret.errcode != 0) {\r\n                                cc.vv.gameNetMgr.roomId = null;\r\n                                cc.director.loadScene('hall');\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    setTimeout(fnTestServerOn, 3000);\r\n                }\r\n            });\r\n        }\r\n\r\n        var fn = function (data) {\r\n            self.node.off('disconnect', fn);\r\n            cc.vv.wc.show(\"正在重连...\");\r\n            fnTestServerOn();\r\n        };\r\n        console.log(\"adasfdasdfsdf\");\r\n\r\n        this.node.on('login_finished', function () {\r\n            cc.vv.wc.hide();\r\n            self.node.on('disconnect', fn);\r\n        });\r\n        this.node.on('disconnect', fn);\r\n    },\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n    },\r\n});\r\n"]}