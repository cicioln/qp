{"version":3,"sources":["BGScaler.js"],"names":["cc","Class","extends","Component","properties","scaleMethod","start","cvs","find","getComponent","Canvas","size","view","getFrameSize","fitWidth","node","height","width","oldHeight","oldWidth"],"mappings":";;;;;;AAAA;AACAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAC,qBAAY;AArBJ,KAHP;;AA2BL;AACAC,SA5BK,mBA4BI;AACL;AACA;AACA;AACA,YAAIC,MAAMP,GAAGQ,IAAH,CAAQ,QAAR,EAAkBC,YAAlB,CAA+BT,GAAGU,MAAlC,CAAV;AACA,YAAIC,OAAOX,GAAGY,IAAH,CAAQC,YAAR,EAAX;AACA;AACA,YAAIR,cAAc,KAAKA,WAAvB;AACA,YAAGA,eAAe,CAAlB,EAAoB;AAChB,gBAAGE,IAAIO,QAAP,EAAgB;AACZ,qBAAKC,IAAL,CAAUC,MAAV,GAAmB,KAAKD,IAAL,CAAUE,KAAV,GAAgBN,KAAKM,KAArB,GAA6BN,KAAKK,MAArD;AACH,aAFD,MAGI;AACA,qBAAKD,IAAL,CAAUE,KAAV,GAAkB,KAAKF,IAAL,CAAUC,MAAV,GAAiBL,KAAKK,MAAtB,GAA+BL,KAAKM,KAAtD;AACH;AACJ,SAPD,MAQK,IAAGZ,eAAe,CAAlB,EAAoB;AACrB,gBAAGE,IAAIO,QAAP,EAAgB;AACZ,oBAAII,YAAY,KAAKH,IAAL,CAAUC,MAA1B;AACA,qBAAKD,IAAL,CAAUC,MAAV,GAAmB,KAAKD,IAAL,CAAUE,KAAV,GAAgBN,KAAKM,KAArB,GAA6BN,KAAKK,MAArD;AACA,qBAAKD,IAAL,CAAUE,KAAV,GAAkB,KAAKF,IAAL,CAAUC,MAAV,GAAiBE,SAAjB,GAA6B,KAAKH,IAAL,CAAUE,KAAzD;AACH,aAJD,MAKI;AACA,oBAAIE,WAAW,KAAKJ,IAAL,CAAUE,KAAzB;AACA,qBAAKF,IAAL,CAAUE,KAAV,GAAkB,KAAKF,IAAL,CAAUC,MAAV,GAAiBL,KAAKK,MAAtB,GAA+BL,KAAKM,KAAtD;AACA,qBAAKF,IAAL,CAAUC,MAAV,GAAmB,KAAKD,IAAL,CAAUE,KAAV,GAAkBE,QAAlB,GAA6B,KAAKJ,IAAL,CAAUC,MAA1D;AACH;AACJ;AACJ;AAxDI;;AA0DL;AA1DJ","file":"BGScaler.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["//背景图缩放器。用于缩放背景\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n\r\n        //适配模式\r\n        //\r\n        //\r\n        //\r\n        scaleMethod:0,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    start () {\r\n        //0、居中（居中其实不需要挂这个脚本，浪费效率）\r\n        //1、宽高都根据高度拉伸\r\n        //2、长边充满\r\n        var cvs = cc.find('Canvas').getComponent(cc.Canvas);\r\n        var size = cc.view.getFrameSize();\r\n        //\r\n        var scaleMethod = this.scaleMethod;\r\n        if(scaleMethod == 1){\r\n            if(cvs.fitWidth){\r\n                this.node.height = this.node.width/size.width * size.height;\r\n            }\r\n            else{\r\n                this.node.width = this.node.height/size.height * size.width;\r\n            }\r\n        }\r\n        else if(scaleMethod == 2){\r\n            if(cvs.fitWidth){\r\n                var oldHeight = this.node.height;\r\n                this.node.height = this.node.width/size.width * size.height;\r\n                this.node.width = this.node.height/oldHeight * this.node.width;\r\n            }\r\n            else{\r\n                var oldWidth = this.node.width;\r\n                this.node.width = this.node.height/size.height * size.width;\r\n                this.node.height = this.node.width / oldWidth * this.node.height;\r\n            }\r\n        }\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}