{"version":3,"sources":["AudioMgr.js"],"names":["cc","Class","extends","Component","properties","bgmVolume","sfxVolume","bgmAudioID","init","t","sys","localStorage","getItem","parseFloat","game","on","EVENT_HIDE","console","log","audioEngine","pauseAll","EVENT_SHOW","resumeAll","getUrl","url","raw","playBGM","audioUrl","stop","loader","loadRes","split","err","clip","error","message","play","playSFX","audioId","setSFXVolume","v","setItem","setBGMVolume","force","resume","pause","setVolume"],"mappings":"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","file":"AudioMgr.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        bgmVolume:1.0,\r\n        sfxVolume:1.0,\r\n        \r\n        bgmAudioID:-1,\r\n    },\r\n\r\n    // use this for initialization\r\n    init: function () {\r\n        var t = cc.sys.localStorage.getItem(\"bgmVolume\");\r\n        if(t != null){\r\n            this.bgmVolume = parseFloat(t);    \r\n        }\r\n        \r\n        var t = cc.sys.localStorage.getItem(\"sfxVolume\");\r\n        if(t != null){\r\n            this.sfxVolume = parseFloat(t);    \r\n        }\r\n        \r\n        cc.game.on(cc.game.EVENT_HIDE, function () {\r\n            console.log(\"cc.audioEngine.pauseAll\");\r\n            cc.audioEngine.pauseAll();\r\n        });\r\n        cc.game.on(cc.game.EVENT_SHOW, function () {\r\n            console.log(\"cc.audioEngine.resumeAll\");\r\n            cc.audioEngine.resumeAll();\r\n        });\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n    \r\n    getUrl:function(url){\r\n        return cc.url.raw(\"resources/sounds/\" + url);\r\n    },\r\n    \r\n    playBGM(url){\r\n        var audioUrl = this.getUrl(url);\r\n        console.log(audioUrl);\r\n        if(this.bgmAudioID >= 0){\r\n            cc.audioEngine.stop(this.bgmAudioID);\r\n        }\r\n\r\n        // 注意：在使用loader加载资源时url路径前面会自动拼接 resources/ \r\n        cc.loader.loadRes(`sounds/${url.split('.')[0]}`, (err, clip) => {\r\n            if (err) {\r\n                console.error(err.message || err);\r\n                return;\r\n            }\r\n            // 播放音乐文件  第一个参数音频clip文件\r\n            // 第二个是否循环播放\r\n            // 第三个音量\r\n            // 该方法返回一个音频播放的标识符 这个标识符可以用于后续控制音频的状态，比如停止播放、暂停、继续播放等\r\n            this.bgmAudioID = cc.audioEngine.play(clip,true,this.bgmVolume); \r\n        });\r\n    },\r\n    \r\n    playSFX(url){\r\n        var audioUrl = this.getUrl(url);\r\n        if(this.sfxVolume > 0){\r\n            var audioId = cc.audioEngine.play(audioUrl,false,this.sfxVolume);    \r\n        }\r\n    },\r\n    \r\n    setSFXVolume:function(v){\r\n        if(this.sfxVolume != v){\r\n            cc.sys.localStorage.setItem(\"sfxVolume\",v);\r\n            this.sfxVolume = v;\r\n        }\r\n    },\r\n    \r\n    setBGMVolume:function(v,force){\r\n        if(this.bgmAudioID >= 0){\r\n            if(v > 0){\r\n                cc.audioEngine.resume(this.bgmAudioID);\r\n            }\r\n            else{\r\n                cc.audioEngine.pause(this.bgmAudioID);\r\n            }\r\n            //cc.audioEngine.setVolume(this.bgmAudioID,this.bgmVolume);\r\n        }\r\n        if(this.bgmVolume != v || force){\r\n            cc.sys.localStorage.setItem(\"bgmVolume\",v);\r\n            this.bgmVolume = v;\r\n            cc.audioEngine.setVolume(this.bgmAudioID,v);\r\n        }\r\n    },\r\n    \r\n    pauseAll:function(){\r\n        cc.audioEngine.pauseAll();\r\n    },\r\n    \r\n    resumeAll:function(){\r\n        cc.audioEngine.resumeAll();\r\n    }\r\n});\r\n"]}